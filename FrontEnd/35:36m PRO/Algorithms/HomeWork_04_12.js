let startQS;
let finishQS;
let startBS;
let finishBS;

const array = [
  -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32,
  9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23,
  6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2,
  1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35,
  6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9,
  0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3,
  32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5,
  23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4,
  2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2,
  35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2,
  9, 0, -5, 23, 6, 2, 35, 6, 3, 32, 9, 4, 2, 1, 2, 9, 0,
];

function quickSort(array) {
  if (array.length <= 1) {
    return array;
  }
  let avgIndex = Math.floor(array.length / 2);
  let avg = array[avgIndex];
  let less = [];
  let greater = [];
  for (let i = 0; i < array.length; i++) {
    if (i === avgIndex) {
      continue;
    }
    if (array[i] < avg) {
      less.push(array[i]);
    } else {
      greater.push(array[i]);
    }
  }

  const newArray = [...quickSort(less), avg, ...quickSort(greater)];
  return newArray;
}

startQS = Date.now();
quickSort(array);
finishQS = Date.now();
console.log(`Finish - ${finishQS} - Start ${startQS} = ${finishQS - startQS}`);

function bubbleSort(array) {
  for (let i = 0; i < array.length; i++) {
    for (let j = 0; j < array.length; j++) {
      if (array[j + 1] < array[j]) {
        let tmp = array[j];
        array[j] = array[j + 1];
        array[j + 1] = tmp;
      }
    }
  }

  return array;
}

startBS = Date.now();
bubbleSort(array);
finishBS = Date.now();

console.log(`Finish - ${finishBS} - Start ${startBS} = ${finishBS - startBS}`);
